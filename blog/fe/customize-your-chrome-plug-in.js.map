{"version":3,"sources":["webpack:///blog/fe/customize-your-chrome-plug-in.js","webpack:///./doc/fe/customize-your-chrome-plug-in.md"],"names":["webpackJsonp","803","module","exports","content","extra","_image-loader_"],"mappings":"AAAAA,cAAc,GAAG,KAEXC,IACA,SAAUC,EAAQC,GCFxBD,EAAAC,SACAC,QAAA,kgLACAC,OACAC","file":"blog/fe/customize-your-chrome-plug-in.js","sourcesContent":["webpackJsonp([51,56],{\n\n/***/ 803:\n/***/ (function(module, exports) {\n\n\t/*markdown-loader*/\n\tmodule.exports = {\n\t  \"content\": \"<p><strong>1.添加图标到浏览器窗口，两种方式</strong></p><p><span class=s1><b>1）地址栏右侧，如下图：</b></span></p><p><span class=s2>manifest代码如下：</span></p><pre><code data-query={} data-lang>\\\"browser_action\\\": {\\n  \\\"default_icon\\\": \\\"images/icon.gif\\\",   // 直接定义插件图标\\n  \\\"default_popup\\\": \\\"popup.html\\\"  // 插件弹窗html\\n},\\n</code></pre><img src=http://ww2.sinaimg.cn/large/43b712ebjw1ey33ussdiwj205g02aaa3.jpg alt width=196 height=82><p><span class=s1>更多资料参考：</span></p><p><span class=s4><a href=http://developer.chrome.com/extensions/browserAction.html>http://developer.chrome.com/extensions/browserAction.html</a></span></p><p><span class=s1><b>2）地址栏中，如下图：（注意默认为隐藏，必须通过js调出）</b></span></p><img src=http://ww4.sinaimg.cn/large/43b712ebjw1ey33yrfudej2038010743.jpg alt width=116 height=36><pre><code data-query={} data-lang>{\\n  \\\"name\\\": \\\"通过url控制插件显示与隐藏\\\",\\n  \\\"version\\\": \\\"1.0\\\",\\n  \\\"description\\\":  \\\"只有当url中含有g时才显示插件\\\",\\n  \\\"background\\\": { \\\"scripts\\\": [\\\"background.js\\\"] },\\n  \\\"page_action\\\" : {\\n    \\\"default_icon\\\" : \\\"icon-19.png\\\",\\n    \\\"default_title\\\" : \\\"图标hover时显示文字\\\"\\n  },\\n  \\\"permissions\\\" : [\\n    \\\"tabs\\\"\\n  ],\\n  \\\"icons\\\" : {\\n    \\\"48\\\" : \\\"icon-48.png\\\",\\n    \\\"128\\\" : \\\"icon-128.png\\\"\\n  },\\n  \\\"manifest_version\\\": 2\\n}\\n</code></pre><p><span class=s1>调出代码如下，在background.js中：</span></p><pre><code data-query={} data-lang>function checkForValidUrl(tabId, changeInfo, tab) {\\n  // If the letter 'g' is found in the tab's URL...\\n  if (tab.url.indexOf('g') > -1) {\\n    // ... show the page action.\\n    chrome.pageAction.show(tabId);\\n  }\\n};\\n\\n// Listen for any changes to the URL of any tab.\\nchrome.tabs.onUpdated.addListener(checkForValidUrl);\\n</code></pre><p><span class=s1>更多资料参考：</span></p><p><span class=s4><a href=http://developer.chrome.com/extensions/pageAction.html>http://developer.chrome.com/extensions/pageAction.html</a></span></p><p><span class=s1><b>2.桌面提醒，如下图：（注意是电脑桌面，而不是chrome中）</b></span></p><img src=http://ww1.sinaimg.cn/large/43b712ebjw1ey343se926j208r02b3yi.jpg alt width=315 height=83><p><span class=s1>改桌面提醒的代码在popup.html的js文件中写即可（备注：chrome插件中不允许写内联js，故需要将js写在外联js中）</span></p><p><span class=s1>代码如下：</span></p><pre><code data-query={} data-lang>var notification = webkitNotifications.createNotification(\\n  'icon-48.png', // 弹窗图片，记住要在manifest中声明\\n  'Hello!', // 弹窗标题\\n  '最新新闻提示~~'  // 弹框内容\\n);\\n\\n//或者弹出网页\\nvar notification = webkitNotifications.createHTMLNotification(\\n  '&lt;a href=\\\"http://www.baidu.com\\\">错误! 超链接引用无效。  // 弹窗地址（只有300*180左右大小）\\n);\\n\\nnotification.show();\\n</code></pre><p><span class=s1>这里还提供了与其它view通信的接口</span></p><pre><code data-query={} data-lang>var back = chrome.extension.getBackgroundPage();\\nback.document.body.innerHTML = \\\"\\\";\\nvar views = chrome.extension.getViews({type:\\\"notification\\\"});\\n</code></pre><p><span class=s1><b>3.omnibox，可以基于地址栏扩展，如下图</b></span></p><img src=http://ww4.sinaimg.cn/large/43b712ebjw1ey347jb0twj20cb046gm6.jpg alt width=443 height=150><p><span class=s1>代码如下：（这里要注意的一点时，需要输入keyword的值（如下demo是lhs），按tab键才能进入omnibox模式，进入该模式，后续绑定的事件才能生效）</span></p><p><span class=s1>manifest.json配置文件如下：</span></p><pre><code data-query={} data-lang>{\\n  \\\"name\\\": \\\"liuhui's Omnibox\\\",\\n  \\\"description\\\" : \\\"地址栏输入测试\\\",\\n  \\\"version\\\": \\\"1.1\\\",\\n  \\\"background\\\": {\\n    \\\"scripts\\\": [\\\"background.js\\\"]\\n  },\\n  \\\"omnibox\\\": { \\\"keyword\\\" : \\\"lhs\\\" },\\n  \\\"manifest_version\\\": 2\\n}\\n</code></pre><p><span class=s1>background.js文件如下：</span></p><pre><code data-query={} data-lang>//当用户在omnibox中输入时触发，类似于地址栏改变时执行\\nchrome.omnibox.onInputChanged.addListener(\\n  function (text, suggest) {\\n    console.log('inputChanged: ' + text);\\n    chrome.omnibox.setDefaultSuggestion({\\n      description:'默认显示'\\n    });\\n    suggest([\\n      {content:text + \\\" one\\\", description:\\\"the first one\\\"},\\n      {content:text + \\\" number two\\\", description:\\\"the second entry\\\"}\\n    ]);\\n  }\\n);\\n\\n//当用户点击omnibox下拉提示时执行（默认添加了google搜索，点击时不触发此事件）\\nchrome.omnibox.onInputEntered.addListener(\\n  function (text) {\\n    console.log('inputEntered: ' + text);\\n    alert('You just typed \\\"' + text + '\\\"');\\n  }\\n);\\n</code></pre><p><span class=s1>更多资料参考：</span></p><p><span class=s4><a href=http://developer.chrome.com/extensions/omnibox.html>http://developer.chrome.com/extensions/omnibox.html</a></span></p><p><span class=s1><b>4.经常看到很多chrome插件都有可配置项，例如refer_control怎么做到的呢？效果如下图：</b></span></p><img src=http://ww4.sinaimg.cn/large/43b712ebjw1ey34cvmsajj20ad04gmxu.jpg alt width=373 height=160><p><span class=s1>manifest.json中配置项如下</span></p><pre><code data-query={} data-lang>{\\n  ...\\n  \\\"manifest_version\\\": 2,\\n  \\\"options_page\\\":\\\"options.html\\\"\\n}\\n</code></pre><p><span class=s1>options.html即为配置项，随便配置即可（注意html中不能有内联js）</span></p><p><span class=s1>至于options.html中配置项与插件的通信可以通过localstorage来解决</span></p><p><span class=s1><b>5.覆盖已有的页面,效果如下图</b></span></p><img src=http://ww2.sinaimg.cn/large/43b712ebjw1ey34ehj0ouj20ca064gmd.jpg alt width=442 height=220><p><span class=s1>代码如下：</span></p><pre><code data-query={} data-lang>\\\"chrome_url_overrides\\\" : {\\n  \\\"pageToOverride\\\": \\\"myPage.html\\\"\\n}\\n</code></pre><p><span class=s1>使用:bookmarks/history/newtab替换pageToOverride</span></p><ul><li><span class=s1>bookmarks：书签页面，在chrome中输入chrome://bookmarks/ 打开</span></li><li><span class=s1>history：历史访问记录页面，在chrome中输入chrome://chrome/history/打开</span></li><li><span class=s1>newtab：新页面，在chrome中新建页面时展现，或者输入chrome://chrome/newtab/</span></li></ul><p><span class=s1>一个插件中只能替换上述三种页面中的一个。</span></p><p><span class=s1><b>注意事项：</b></span></p><ul><li><span class=s1>新页面最好小而快，用户经常希望立马打开页面</span></li><li><span class=s1>新页面中药添加title,例如<title>new tab</title></span></li><li><span class=s1>新页面不要有焦点，当新建窗口时，用户往往希望焦点在地址栏</span></li><li><span class=s1>不要模仿默认的新建页</span></li></ul>\",\n\t  \"extra\": {\n\t    \"_image-loader_\": []\n\t  }\n\t}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// blog/fe/customize-your-chrome-plug-in.js","/*markdown-loader*/\nmodule.exports = {\n  \"content\": \"<p><strong>1.添加图标到浏览器窗口，两种方式</strong></p><p><span class=s1><b>1）地址栏右侧，如下图：</b></span></p><p><span class=s2>manifest代码如下：</span></p><pre><code data-query={} data-lang>\\\"browser_action\\\": {\\n  \\\"default_icon\\\": \\\"images/icon.gif\\\",   // 直接定义插件图标\\n  \\\"default_popup\\\": \\\"popup.html\\\"  // 插件弹窗html\\n},\\n</code></pre><img src=http://ww2.sinaimg.cn/large/43b712ebjw1ey33ussdiwj205g02aaa3.jpg alt width=196 height=82><p><span class=s1>更多资料参考：</span></p><p><span class=s4><a href=http://developer.chrome.com/extensions/browserAction.html>http://developer.chrome.com/extensions/browserAction.html</a></span></p><p><span class=s1><b>2）地址栏中，如下图：（注意默认为隐藏，必须通过js调出）</b></span></p><img src=http://ww4.sinaimg.cn/large/43b712ebjw1ey33yrfudej2038010743.jpg alt width=116 height=36><pre><code data-query={} data-lang>{\\n  \\\"name\\\": \\\"通过url控制插件显示与隐藏\\\",\\n  \\\"version\\\": \\\"1.0\\\",\\n  \\\"description\\\":  \\\"只有当url中含有g时才显示插件\\\",\\n  \\\"background\\\": { \\\"scripts\\\": [\\\"background.js\\\"] },\\n  \\\"page_action\\\" : {\\n    \\\"default_icon\\\" : \\\"icon-19.png\\\",\\n    \\\"default_title\\\" : \\\"图标hover时显示文字\\\"\\n  },\\n  \\\"permissions\\\" : [\\n    \\\"tabs\\\"\\n  ],\\n  \\\"icons\\\" : {\\n    \\\"48\\\" : \\\"icon-48.png\\\",\\n    \\\"128\\\" : \\\"icon-128.png\\\"\\n  },\\n  \\\"manifest_version\\\": 2\\n}\\n</code></pre><p><span class=s1>调出代码如下，在background.js中：</span></p><pre><code data-query={} data-lang>function checkForValidUrl(tabId, changeInfo, tab) {\\n  // If the letter 'g' is found in the tab's URL...\\n  if (tab.url.indexOf('g') > -1) {\\n    // ... show the page action.\\n    chrome.pageAction.show(tabId);\\n  }\\n};\\n\\n// Listen for any changes to the URL of any tab.\\nchrome.tabs.onUpdated.addListener(checkForValidUrl);\\n</code></pre><p><span class=s1>更多资料参考：</span></p><p><span class=s4><a href=http://developer.chrome.com/extensions/pageAction.html>http://developer.chrome.com/extensions/pageAction.html</a></span></p><p><span class=s1><b>2.桌面提醒，如下图：（注意是电脑桌面，而不是chrome中）</b></span></p><img src=http://ww1.sinaimg.cn/large/43b712ebjw1ey343se926j208r02b3yi.jpg alt width=315 height=83><p><span class=s1>改桌面提醒的代码在popup.html的js文件中写即可（备注：chrome插件中不允许写内联js，故需要将js写在外联js中）</span></p><p><span class=s1>代码如下：</span></p><pre><code data-query={} data-lang>var notification = webkitNotifications.createNotification(\\n  'icon-48.png', // 弹窗图片，记住要在manifest中声明\\n  'Hello!', // 弹窗标题\\n  '最新新闻提示~~'  // 弹框内容\\n);\\n\\n//或者弹出网页\\nvar notification = webkitNotifications.createHTMLNotification(\\n  '&lt;a href=\\\"http://www.baidu.com\\\">错误! 超链接引用无效。  // 弹窗地址（只有300*180左右大小）\\n);\\n\\nnotification.show();\\n</code></pre><p><span class=s1>这里还提供了与其它view通信的接口</span></p><pre><code data-query={} data-lang>var back = chrome.extension.getBackgroundPage();\\nback.document.body.innerHTML = \\\"\\\";\\nvar views = chrome.extension.getViews({type:\\\"notification\\\"});\\n</code></pre><p><span class=s1><b>3.omnibox，可以基于地址栏扩展，如下图</b></span></p><img src=http://ww4.sinaimg.cn/large/43b712ebjw1ey347jb0twj20cb046gm6.jpg alt width=443 height=150><p><span class=s1>代码如下：（这里要注意的一点时，需要输入keyword的值（如下demo是lhs），按tab键才能进入omnibox模式，进入该模式，后续绑定的事件才能生效）</span></p><p><span class=s1>manifest.json配置文件如下：</span></p><pre><code data-query={} data-lang>{\\n  \\\"name\\\": \\\"liuhui's Omnibox\\\",\\n  \\\"description\\\" : \\\"地址栏输入测试\\\",\\n  \\\"version\\\": \\\"1.1\\\",\\n  \\\"background\\\": {\\n    \\\"scripts\\\": [\\\"background.js\\\"]\\n  },\\n  \\\"omnibox\\\": { \\\"keyword\\\" : \\\"lhs\\\" },\\n  \\\"manifest_version\\\": 2\\n}\\n</code></pre><p><span class=s1>background.js文件如下：</span></p><pre><code data-query={} data-lang>//当用户在omnibox中输入时触发，类似于地址栏改变时执行\\nchrome.omnibox.onInputChanged.addListener(\\n  function (text, suggest) {\\n    console.log('inputChanged: ' + text);\\n    chrome.omnibox.setDefaultSuggestion({\\n      description:'默认显示'\\n    });\\n    suggest([\\n      {content:text + \\\" one\\\", description:\\\"the first one\\\"},\\n      {content:text + \\\" number two\\\", description:\\\"the second entry\\\"}\\n    ]);\\n  }\\n);\\n\\n//当用户点击omnibox下拉提示时执行（默认添加了google搜索，点击时不触发此事件）\\nchrome.omnibox.onInputEntered.addListener(\\n  function (text) {\\n    console.log('inputEntered: ' + text);\\n    alert('You just typed \\\"' + text + '\\\"');\\n  }\\n);\\n</code></pre><p><span class=s1>更多资料参考：</span></p><p><span class=s4><a href=http://developer.chrome.com/extensions/omnibox.html>http://developer.chrome.com/extensions/omnibox.html</a></span></p><p><span class=s1><b>4.经常看到很多chrome插件都有可配置项，例如refer_control怎么做到的呢？效果如下图：</b></span></p><img src=http://ww4.sinaimg.cn/large/43b712ebjw1ey34cvmsajj20ad04gmxu.jpg alt width=373 height=160><p><span class=s1>manifest.json中配置项如下</span></p><pre><code data-query={} data-lang>{\\n  ...\\n  \\\"manifest_version\\\": 2,\\n  \\\"options_page\\\":\\\"options.html\\\"\\n}\\n</code></pre><p><span class=s1>options.html即为配置项，随便配置即可（注意html中不能有内联js）</span></p><p><span class=s1>至于options.html中配置项与插件的通信可以通过localstorage来解决</span></p><p><span class=s1><b>5.覆盖已有的页面,效果如下图</b></span></p><img src=http://ww2.sinaimg.cn/large/43b712ebjw1ey34ehj0ouj20ca064gmd.jpg alt width=442 height=220><p><span class=s1>代码如下：</span></p><pre><code data-query={} data-lang>\\\"chrome_url_overrides\\\" : {\\n  \\\"pageToOverride\\\": \\\"myPage.html\\\"\\n}\\n</code></pre><p><span class=s1>使用:bookmarks/history/newtab替换pageToOverride</span></p><ul><li><span class=s1>bookmarks：书签页面，在chrome中输入chrome://bookmarks/ 打开</span></li><li><span class=s1>history：历史访问记录页面，在chrome中输入chrome://chrome/history/打开</span></li><li><span class=s1>newtab：新页面，在chrome中新建页面时展现，或者输入chrome://chrome/newtab/</span></li></ul><p><span class=s1>一个插件中只能替换上述三种页面中的一个。</span></p><p><span class=s1><b>注意事项：</b></span></p><ul><li><span class=s1>新页面最好小而快，用户经常希望立马打开页面</span></li><li><span class=s1>新页面中药添加title,例如<title>new tab</title></span></li><li><span class=s1>新页面不要有焦点，当新建窗口时，用户往往希望焦点在地址栏</span></li><li><span class=s1>不要模仿默认的新建页</span></li></ul>\",\n  \"extra\": {\n    \"_image-loader_\": []\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/picidae/lib/lib/loaders/markdown-loader!./doc/fe/customize-your-chrome-plug-in.md\n// module id = 803\n// module chunks = 51"],"sourceRoot":""}